image: hugomrdias/node-alpine:test
stages:
  - check
  - test
  - cov
  - pre-release
  - release
  - interop

.only_changes: &only_changes
  changes:
    - src/**/*
    - test/**/*
    - package.json

variables:
  DOCKER_DRIVER: overlay2

before_script:
  - npm ci -q

check:
  stage: check
  script:
    - npm run lint
    # - npx dependency-check package.json './test/**/*.js'
    # - npm install --no-lockfile @commitlint/config-conventional @commitlint/cli --save-dev
    # - npx commitlint --extends=@commitlint/config-conventional --from=$CI_COMMIT_BEFORE_SHA --to=$CI_COMMIT_SHA
    - npm run build
  only:
    - branches
  artifacts:
    paths:
      - dist/
  except:
    refs:
      - schedules

test-node-8:
  stage: test
  image: node:8
  script:
    - npx nyc -s npm run test:node
  artifacts:
    paths:
      - .nyc_output/
  except:
    refs:
      - schedules

test-node-10:
  stage: test
  script:
    - npx nyc -s npm run test:node
  artifacts:
    paths:
      - .nyc_output/
  except:
    refs:
      - schedules

test-browser-chrome:
  image: hugomrdias/node-chrome:test
  stage: test
  script:
    - AEGIR_BROWSERS=ChromeDocker npm run test:browser
  except:
    refs:
      - schedules

test-browser-firefox:
  image: hugomrdias/node-firefox:test
  stage: test
  script:
    - AEGIR_BROWSERS=FirefoxHeadless npm run test:browser
  artifacts:
    paths:
      - coverage/
  except:
    refs:
      - schedules

cov:
  stage: cov
  image: node:10-alpine
  before_script: []
  variables:
    GIT_STRATEGY: none
  script:
    - cp coverage/coverage-final.json .nyc_output/browser.json
    - npx nyc report --reporter text-summary --reporter html
  dependencies:
    - test-node-10
    - test-node-8
    - test-browser-firefox
  artifacts:
    paths:
      - coverage/
  coverage: '/Lines        : \d+\.\d+/'
  except:
    refs:
      - schedules

.git_auth: &git_auth |
  export GH_RELEASE_GITHUB_API_TOKEN=$GITHUB_TOKEN
  git remote add upstream https://hugomrdias:$GITHUB_TOKEN@github.com/hugomrdias/$CI_PROJECT_NAME.git
  git config --global user.email "hugomrdias@gmail.com"
  git config --global user.name "hugomrdias"
  git checkout $CI_COMMIT_REF_NAME
  git fetch upstream
  git branch -u upstream/$CI_COMMIT_REF_NAME
  echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

pre-release:
  stage: pre-release
  before_script: []
  script:
    - *git_auth
    - "npm --no-git-tag-version version prerelease --preid=rc &>/dev/null && npx conventional-changelog-cli -i CHANGELOG.md -r 0 -s -p angular -u && git add CHANGELOG.md && version=`node -p \"require('./package.json').version\"` && echo $version && git commit -am \"chore(pre-release): ${version}\""
    - git push upstream master && npm publish . --tag next
  only:
    refs:
      - master
  except:
    refs:
      - schedules
    variables:
      - $CI_COMMIT_MESSAGE =~ /^chore(pre-release).*/
      - $CI_COMMIT_MESSAGE =~ /^chore(release).*/

release:
  stage: release
  before_script: []
  script:
    - *git_auth
    - "cp package.json _package.json && bump=`npx conventional-recommended-bump -p angular` && echo $bump && npm --no-git-tag-version version $bump &>/dev/null && npx conventional-changelog -i CHANGELOG.md -r 0 -s -p angular && git add CHANGELOG.md && version=`node -p \"require('./package.json').version\"` && mv -f _package.json package.json && git commit -am \"docs(CHANGELOG): ${version}\" && npm version $bump -m \"chore(release): v%s\""
    - git push --follow-tags upstream master && npm publish
    - npx gh-release -y
  only:
    refs:
      - master
  except:
    refs:
      - schedules
    variables:
      - $CI_COMMIT_MESSAGE =~ /^chore(pre-release).*/
      - $CI_COMMIT_MESSAGE =~ /^chore(release).*/
  when: manual

interop:
  stage: interop
  image:  byrnedo/docker-alpine-curl
  variables:
    GIT_STRATEGY: none
  before_script: []
  script:
    - curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master https://gitlab.com/api/v4/projects/8952909/trigger/pipeline
  only:
    - schedules
